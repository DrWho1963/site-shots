name: Daily Site Screenshots (One Email per URL)

on:
  workflow_dispatch:
  schedule:
    - cron: "0 11 * * *"  # ~7:00 AM US Eastern

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      urls: ${{ steps.collect.outputs.urls }}
    steps:
      - uses: actions/checkout@v4

      - id: collect
        env:
          # Optional: comma-separated override via secret (first priority)
          SHOT_URLS: ${{ secrets.SHOT_URLS }}
          # Default list used when secret is empty; also merged (without dupes) if secret is present
          DEFAULT_URLS: |
            [
              "https://www.mayspaving.com/",
              "https://prioritybus.com/",
              "https://naturescharmboutique.com/",
              "https://www.darrenbgreen.com/",
              "https://eastersurveying.land/",
              "https://stumpcreeksausage.com/",
              "https://coldrunnerslogistics.com/",
              "https://www.oilfieldpatents.com/",
              "https://www.energy-ip.com/",
              "https://www.procraftwoodworks.com/",
              "https://soultoearththerapies.com/",
              "https://www.bradthetreeman.com/",
              "https://bestitchedemb.com/",
              "https://maxpenningtonseries.com/",
              "https://darrenbgreen.com/",
              "http://systemsandcontrols.com/",
              "https://www.greenspage.com/"
            ]
        shell: bash
        run: |
          set -euo pipefail
          sudo apt-get update -y && sudo apt-get install -y jq

          # Build urls.json from secret + defaults (unique, in that order)
          jq -cn --arg secret "${SHOT_URLS:-}" --argjson defaults "${DEFAULT_URLS}" '
            ( if ($secret|length)>0
              then ($secret
                    | split(",")
                    | map(gsub("^\\s+|\\s+$";""))
                    | map(select(length>0)))
              else [] end ) as $s
            | ($s + ( $defaults - $s ))' > urls.json

          echo "Built URL list:"
          cat urls.json

          # Pass list to next job as a compact JSON string
          echo "urls=$(jq -c . urls.json)" >> "$GITHUB_OUTPUT"

  shoot_and_email:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        url: ${{ fromJSON(needs.prepare.outputs.urls) }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Playwright + browsers
        run: |
          pip install playwright
          python -m playwright install --with-deps chromium

      - name: Screenshot to JPEG
        env:
          # Your Python script splits on commas; each job supplies one URL here.
          SHOT_URLS: ${{ matrix.url }}
        shell: bash
        run: |
          set -e
          mkdir -p shots
          python scripts/daily_screenshot.py
          shopt -s nullglob
